name: Deploy App

on:
  workflow_dispatch:
    inputs:
      rollback:
        description: 'Is this a rollback deployment?'
        required: false
        default: 'false'

permissions:
  contents: write   # Required for GITHUB_TOKEN to push changes

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set rollback input
        run: echo "ROLLBACK=${{ github.event.inputs.rollback }}" >> $GITHUB_ENV

      - name: Simulate Deploy
        run: echo "ðŸš€ Deploying..."  # Replace with actual deploy commands

      - name: Save Deployment Metadata
        run: |
          cat <<EOF > deployment_logs.json
          [{
            "deployment_id": "${{ github.run_id }}",
            "repo": "${{ github.repository }}",
            "status": "success",
            "rollback": ${ROLLBACK},
            "timestamp": "${{ github.run_started_at }}"
          }]
          EOF

      - name: Append to Deployment History and Push
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git clone https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }} repo
          cd repo

          mkdir -p .github/data
          DEPLOY_LOG_FILE=".github/data/deployments.json"

          if [ ! -f "$DEPLOY_LOG_FILE" ]; then
            echo "[]" > "$DEPLOY_LOG_FILE"
          fi

          jq --argjson new_entry "$(cat ../deployment_logs.json | jq '.[0]')" \
             '. += [$new_entry]' "$DEPLOY_LOG_FILE" > tmp.json && mv tmp.json "$DEPLOY_LOG_FILE"

          git add "$DEPLOY_LOG_FILE"
          git commit -m "Update deployment log: ${{ github.run_id }}" || echo "No changes to commit"
          git push origin HEAD:main

      - name: Upload Raw Deployment Log
        uses: actions/upload-artifact@v4
        with:
          name: deployment-log
          path: deployment_logs.json

      - name: Upload Deployment History
        uses: actions/upload-artifact@v4
        with:
          name: deployment-history
          path: repo/.github/data/deployments.json

  dqr:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download Deployment History
        uses: actions/download-artifact@v4
        with:
          name: deployment-history
          path: .github/data

      - name: Run DQR Script
        run: node .github/scripts/calculate-dqr.js

         - name: Commit DQR Report
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git pull origin main --rebase  # ðŸ‘ˆ Add this line
          git add DQR.md
          git commit -m "ðŸ“Š Update DQR report" || echo "No changes to commit"
          git push origin HEAD:main
